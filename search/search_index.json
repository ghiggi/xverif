{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"xverif: comprehensive forecast verification with xarray","text":"<p>The code in this repository provides a scalable and flexible framework to perform forecast verification. It principally builds upon xarray, dask and flox libraries.</p> <p>ATTENTION: The code is subject to changes in the coming months.</p> <p>The folder tutorials (will) provide jupyter notebooks describing various features of xverif.</p> <p>The folder docs (will) contains slides and notebooks explaining the x-forecasting framework.</p>"},{"location":"api/xverif/","title":"The xverif API","text":""},{"location":"api/xverif/#xverif.xverif.deterministic","title":"<code>xverif.xverif.deterministic(pred, obs, forecast_type = 'continuous', aggregating_dim = None, skip_na = True, thr = 1e-06)</code>","text":"<p>Compute deterministic skill metrics.</p> Source code in <code>xverif/xverif.py</code> <pre><code>def deterministic(\n    pred,\n    obs,\n    forecast_type=\"continuous\",\n    aggregating_dim=None,\n    skip_na=True,\n    thr=0.000001,\n):\n\"\"\"Compute deterministic skill metrics.\"\"\"\n    # Check\n    if not isinstance(forecast_type, str):\n        raise TypeError(\n            \"'forecast_type' must be a string specifying the forecast type.\"\n        )\n    if forecast_type not in [\"continuous\", \"categorical\"]:\n        raise ValueError(\n            \"'forecast_type' must be either 'continuous' or 'categorical'.\"\n        )\n    # ------------------------------------------------------------------------.\n    # Align dataset (dimensions)\n    pred, obs = xr.align(pred, obs, join=\"inner\")\n    # Align dataset (variables):\n    common_vars = xr_common_vars(pred, obs)\n    if common_vars is None:\n        raise ValueError(\"No common variables between obs and pred xr.Dataset.\")\n    pred = pred[common_vars]\n    obs = obs[common_vars]\n    # ------------------------------------------------------------------------.\n    # Run deterministic verification\n    if forecast_type == \"continuous\":\n        t_i = time.time()\n        ds_skill = _deterministic_continuous_metrics(\n            pred=pred, obs=obs, dim=aggregating_dim, skip_na=skip_na, thr=thr\n        )\n        print(\n            \"- Elapsed time for forecast deterministic verification: {:.2f} minutes.\".format(\n                (time.time() - t_i) / 60\n            )\n        )\n        return ds_skill\n    else:\n        t_i = time.time()\n        raise NotImplementedError(\n            \"Categorical forecast skill metrics are not yet implemented.\"\n        )\n        print(\n            \"- Elapsed time for forecast deterministic verification: {:.2f} minutes.\".format(\n                (time.time() - t_i) / 60\n            )\n        )\n</code></pre>"}]}